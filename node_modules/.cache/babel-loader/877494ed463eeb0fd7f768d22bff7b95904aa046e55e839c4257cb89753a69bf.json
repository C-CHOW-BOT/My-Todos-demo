{"ast":null,"code":"var _jsxFileName = \"/Users/brucezhou/master/my-app/src/components/Todo.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Modal from \"./Modal\";\nimport Backdrop from \"./Backdrop\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Todo(props) {\n  _s();\n  const [ModalIsOpen, setModalIsOpen] = useState(false);\n  function deleteHandler() {\n    setModalIsOpen(true);\n  }\n  function closeModalHandler() {\n    setModalIsOpen(false);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: props.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: deleteHandler,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), ModalIsOpen ? /*#__PURE__*/_jsxDEV(Modal, {\n      onCancel: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 23\n    }, this) : null, ModalIsOpen && /*#__PURE__*/_jsxDEV(Backdrop, {\n      onCancel: closeModalHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(Todo, \"FQVqf2gTSP9nzN4FLVCXVz6c/z8=\");\n_c = Todo;\nexport default Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["useState","Modal","Backdrop","jsxDEV","_jsxDEV","Todo","props","_s","ModalIsOpen","setModalIsOpen","deleteHandler","closeModalHandler","className","children","text","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onCancel","_c","$RefreshReg$"],"sources":["/Users/brucezhou/master/my-app/src/components/Todo.js"],"sourcesContent":["import { useState } from \"react\";\n\nimport Modal from \"./Modal\";\nimport Backdrop from \"./Backdrop\";\n\nfunction Todo(props) {\n  const [ ModalIsOpen, setModalIsOpen ] = useState(false);\n\n  function deleteHandler() {\n    setModalIsOpen(true);\n  }\n  \n  function closeModalHandler() {\n\t\tsetModalIsOpen(false);\n\t}\n\n  return (\n    <div className=\"card\">\n      <h2>{props.text}</h2>\n      <div className=\"actions\">\n        <button className=\"btn\" onClick={deleteHandler}>\n          Delete\n        </button>\n      </div>\n      { ModalIsOpen ? <Modal onCancel/> : null }\n      { ModalIsOpen && <Backdrop onCancel={closeModalHandler}/> }\n    </div>\n  );\n}\n\nexport default Todo;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,IAAIA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACnB,MAAM,CAAEC,WAAW,EAAEC,cAAc,CAAE,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAEvD,SAASU,aAAaA,CAAA,EAAG;IACvBD,cAAc,CAAC,IAAI,CAAC;EACtB;EAEA,SAASE,iBAAiBA,CAAA,EAAG;IAC7BF,cAAc,CAAC,KAAK,CAAC;EACtB;EAEC,oBACEL,OAAA;IAAKQ,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBT,OAAA;MAAAS,QAAA,EAAKP,KAAK,CAACQ;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACrBd,OAAA;MAAKQ,SAAS,EAAC,SAAS;MAAAC,QAAA,eACtBT,OAAA;QAAQQ,SAAS,EAAC,KAAK;QAACO,OAAO,EAAET,aAAc;QAAAG,QAAA,EAAC;MAEhD;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,EACJV,WAAW,gBAAGJ,OAAA,CAACH,KAAK;MAACmB,QAAQ;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,GAAG,IAAI,EACtCV,WAAW,iBAAIJ,OAAA,CAACF,QAAQ;MAACkB,QAAQ,EAAET;IAAkB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtD,CAAC;AAEV;AAACX,EAAA,CAvBQF,IAAI;AAAAgB,EAAA,GAAJhB,IAAI;AAyBb,eAAeA,IAAI;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}